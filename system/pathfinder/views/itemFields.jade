//- Item Fields
.flex.vert.pad
  .flex.vert.border.pad
    .flex.center: label: strong Pathfinder
    .flex.center.pad.fill
      .flex.vert
        label Caster Level
        input.form-input(type="number" name="properties.cl" value=Common.utilities.get(item, 'properties.cl') min=0)
      .flex.vert
        label Max HP
        input.form-input(type="number" name="properties.hpMax" value=Common.utilities.get(item, 'properties.hpMax') min=0)
      .flex.vert
        label Aura
        select.form-input(type="number" name="properties.aura")
          option(disabled selected) —
          each aura in Item.auras
            option(value=aura selected=Common.utilities.get(item, 'properties.aura')==aura)= aura
      .flex.vert
        label Slot
        select.form-input(type="number" name="properties.slot")
          option(selected disabled) —
          each slot in Item.slots
            option(value=slot selected=Common.utilities.get(item, 'properties.slot')==slot)= slot
      .flex.vert
        label Hands
        select.form-input(type="number" name="properties.hands" value=Common.utilities.get(item, 'properties.hpMax'))
          option Any
          option(value=1) One-handed
          option(value=2) Two-handed
          option(value=0) Impossible to Carry
.flex.vert.pad
  mixin bonus(bonus)
    .flex.pad.fill.pathfinder_bonus
      .flex.vert.no-size
        input.form-input(type="number" name="properties.bonuses.$.number" value=bonus.number)
      .flex.vert
        select.form-input(name="properties.bonuses.$.type")
          option(disabled selected) —
          each type in Quantifiable.bonus.types
            option(value=type selected=bonus.type==type)= type
      .flex.vert.center.no-size to
      .flex.vert
        select.form-input(name="properties.bonuses.$.key")
          option(disabled selected) —
          each key in Quantifiable.list.keys
            option(value=key selected=bonus.key==key)= Quantifiable.list.get(key).label
      .flex.vert.center.no-size
        button.close(data-click="remove" data-target=".pathfinder_bonus") ×

  #pathfinder_bonuses.flex.vert.border.fill
    template#bonus_template
      +bonus({})
    if Common.utilities.get(item, 'properties.bonuses')
      each bonus in Common.utilities.get(item, 'properties.bonuses')
        +bonus(bonus)
  .flex.center
    a.btn(data-click='duplicate' data-target="bonus_template" data-destination="pathfinder_bonuses") New Bonus
