include filters
include character

mixin logo(options)
  -options = options || {}
  -options.inline = options.inline || true
  -options.text = options.text || false
  -options.cube = options.cube || true
  if options.inline
    .logo.inline&attributes(attributes)
      if options.text
        img.text(src="/images/logo-text.svg")
      if options.cube
        img.cube(src="/images/logo-d6.svg")
  else
    .logo&attributes(attributes)
      if options.text
        img.text(src="/images/logo-text.svg")
      if options.cube
        img.cube(src="/images/logo-d6.svg")

mixin vignettes(vignettes, color)
  -var vignetteAttributes = {}
  if color
    -vignetteAttributes['style'] = {"background-color": color}
  .vignettes&attributes(vignetteAttributes)
    each vignette,i in vignettes
      +vignette(vignette,i,color)

mixin vignette(vignette,i,color)
  -var vignetteAttributes = {'data-order': i, 'data-focus': vignette.focus, style: {"background-image": "url("+vignette.path+")", "background-position":vignette.focus[0]+"% "+vignette.focus[1]+"%","transform-origin":vignette.focus[0]+"% "+vignette.focus[1]+"%","z-index": i, "top": (-i*100) + "%", "display": i>0?"none":"block"}}
  if !color
    -var color = []
    -for(i=0;i<3;i++){color.push(Math.floor((Math.random()*127.5)+63.75))}
    -vignetteAttributes['style']['background-color'] = "rgb("+color+")"
  .vignette&attributes(vignetteAttributes)
    
mixin section(title)
  section
    if title
      .section-title
        h2= title
    .section-body
      block
    
mixin header(options)
  -options = options || {}
  -options.vignettes = options.vignettes || 1
  header#header&attributes(attributes)
    .header-content
      block
    if vignettes
      -var vignetteKeys = Object.keys(vignettes)
      -var subSet = []
      -for(i=0;i<options.vignettes;i++){
      - randomChoice = Math.floor(Math.random()*vignetteKeys.length)
      - subSet.push(vignettes[vignetteKeys.splice(randomChoice,1)])
      -}
      +vignettes(subSet, options.color)
